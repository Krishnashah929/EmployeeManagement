@model EM.Entity.Doctor
@{
    var data = Model;
}
<div class="modal-content">
    <!-- Modal Header -->
    <div class="modal-header">
        <h3 class="modal-title m-auto text-secondary">
            <b> Update Doctor's Details </b>
        </h3>
    </div>
    <!-- Modal body -->
    <div class="modal-body">
        <!-- New user registration form -->
        <form id="frmDoctors" method="post">
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            <input asp-for="DoctorId" hidden class="form-control" />
            <input asp-for="UserId" hidden class="form-control" />
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label> First Name : </label>
                        <div class="input-group">
                            <input type="text" asp-for="FirstName" class="form-control" placeholder="First Name" onkeydown="return /[a-z]/i.test(event.key)" disabled>
                        </div>
                        <span asp-validation-for="FirstName" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group">
                        <label> Last Name :</label>
                        <div class="input-group">
                            <input type="text" asp-for="Lastname" class="form-control" placeholder="Last Name" onkeydown="return /[a-z]/i.test(event.key)" disabled>
                        </div>
                        <span asp-validation-for="Lastname" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label> Email Address</label>
                        <div class="input-group">
                            <input type="email" asp-for="EmailAddress" class="form-control" placeholder="Enter email" disabled>
                        </div>
                        <span asp-validation-for="EmailAddress" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group">
                        <label>Phone Number : </label>
                        <div class="input-group">
                            @if (Model.PhoneNumber == 0)
                            {
                                <input type="tel" asp-for="PhoneNumber" class="form-control" placeholder="Enter Phone Number" maxlength="10" value="" oninput="this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\..*)\./g, '$1');">
                            }
                            else
                            {
                                <input type="tel" asp-for="PhoneNumber" class="form-control" placeholder="Enter Phone Number" maxlength="10">
                            }
                        </div>
                        <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label>Pincode :</label>
                        <div class="input-group">
                            @if (Model.Pincode == 0)
                            {
                                <input type="number" value="" asp-for="Pincode" class="form-control" placeholder="Enter Pincode" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" maxlength="6">
                            }
                            else
                            {
                                <input type="number" asp-for="Pincode" class="form-control" placeholder="Enter Pincode" oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);" maxlength="6">
                            }
                        </div>
                        <span asp-validation-for="Pincode" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group">
                        <label>Address : </label>
                        <div class="input-group">
                            <input type="text" asp-for="Address" class="form-control" placeholder="Enter Address">
                        </div>
                        <span asp-validation-for="Address" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-6">
                    <div class="form-group">
                        <label> Speciality :</label>
                        <div class="select2-blue">
                            <select class="select2" multiple="multiple" asp-for="SpecialityId" id="idSpecialities" data-dropdown-css-class="select2-blue">
                                <option value="2" id="idNuero">Nuero Surgon</option>
                                <option value="3" id="idOrtho">Orthopedic Surgon</option>
                                <option value="4" id="idENT">ENT Specilaist</option>
                                <option value="5" id="idEye">Eye Specialist</option>
                            </select>
                        </div>
                        <span asp-validation-for="SpecialityId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-6">
                    <div class="form-group">
                        <label> Color : </label>
                        <select class="form-select form-control" asp-for="Color">
                            <option selected value=""> Choose Color</option>
                            <option value="1"> Red </option>
                            <option value="2"> Blue </option>
                            <option value="3"> Green </option>
                        </select>
                        <span asp-validation-for="Color" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-4">
                    <div class="form-group">
                        <label> Country : </label>
                        <select class="form-select form-control" asp-for="CountryId" id="idCountryList" onchange="fnGetState(this.value)">
                            <option value=""> Select Country</option>
                        </select>
                        <span asp-validation-for="CountryId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        <label>State : </label>
                        <select class="form-select form-control" asp-for="StatesId" id="idStateList" onchange="fnGetCity(this.value)">
                            <option value=""> Select State</option>
                        </select>
                        <span asp-validation-for="StatesId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        <label>City : </label>
                        <select class="form-select form-control" asp-for="CityId" id="idCityList">
                            <option value=""> Select City </option>
                        </select>
                        <span asp-validation-for="CityId" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <br />
            <div class="row m-auto">
                <div class="col">
                    <button type="submit" class="btn btn-primary btn-block">  Update Doctor </button>
                </div>
            </div>
        </form>
    </div>
</div>

<script type="text/javascript">
    var countryID = '@Model.CountryId';
    var stateID = '@Model.StatesId';
    //onload
    $(function () {
        fnGetCountry();
        if (countryID != null && countryID != undefined && parseInt(countryID) > 0) {
            fnGetState(countryID);
            fnGetCity(stateID);
        }        
    });

    //Get list of countries from database
    function fnGetCountry() {        
        $.ajax({
            url: '@Url.Content("~/Doctor/GetCountry")',
            success: function (result) {
                $.each(result, function (i, data) {
                    //Option one
                    if (data != null && data != undefined && data.countryId === parseInt(countryID))
                    {
                        $('#idCountryList').append('<option selected  value="' + data.countryId + '">' + data.countryName + '</option > ');
                    }
                    else
                    {
                        $('#idCountryList').append('<option value="' + data.countryId + '">' + data.countryName + '</option > ');
                    }
                });
                // option Two
                //$('#idCountryList').val('@Model.CountryId')
            }
        });
    };

    //Get list of states from database
    function fnGetState(country) {
        
        var countryId = country;        
            $.ajax({
            type: 'GET',
            url: '@Url.Content("~/Doctor/GetState/")',
            datatype: 'json',
            data: { id: countryId },
                success: function (states) {                    
                    if (states != null && states != undefined) {
                        $('#idStateList').html("");
                        $.each(states, function (i, state)
                        {
                            if (state != null && state != undefined && state.statesId === parseInt(stateID)) {
                                $('#idStateList').append('<option selected  value="' + state.statesId + '">' + state.stateName + '</option > ');
                            }
                            else
                            {
                                $("#idStateList").append('<option  value="' + state.statesId + '">' + state.stateName + '</option > ');
                            }
                        }
                        )
                    }                   
            },
            error: function (ex) {
                debugger;
                toastr.error('Invalid Data.');
                console.log('Failed ');
            },
        });
    }


    //Get list of cities from database
    function fnGetCity(states) {
         
        var statesId = states;
        var cityID = '@Model.CityId';
        $.ajax({
            type: 'GET',
            url: '@Url.Content("~/Doctor/GetCity/")',
            datatype: 'json',
            data: { id: statesId },

            success: function (city) {
                if (city != null && city != undefined) {
                    $('#idCityList').html("");
                    $.each(city, function (i, city) {
                        if (city != null && city != undefined && city.cityId === parseInt(cityID))
                        {
                            $('#idCityList').append('<option selected  value="' + city.cityId + '">' + city.cityName + '</option > ');
                        }
                        else
                        {
                            $("#idCityList").append('<option value="' + city.cityId + '">' + city.cityName + '</option > ');
                        }
                    }
                    )
                }
            },
            error: function (ex) {
                debugger;
                toastr.error('Invalid Data.');
                console.log('Failed ');
            },
        });
    }

    //Initialize multiple Select2 Elements
    $(function () {
         $('.select2').select2()
    });
    //For edit model post method
    $("#frmDoctors").submit(function (event) {
        $.validator.setDefaults({
            ignore: ':hidden, [readonly=readonly]'
        });
        var $form = $('#frmDoctors');
        $.validator.unobtrusive.parse($form);

        if ($("#frmDoctors").valid()) {
            event.preventDefault();
            event.stopImmediatePropagation();

            //For getting multiple select values.
            var selected = [];
            $('#idSpecialities :selected').each(function (i, sel) {
                selected.push($(sel).val());
            });
            console.log(selected);

            $.ajax({
                url: '@Url.Content("~/Doctor/EditDoctor")',
                type: "POST",
                async: true,
                data: $("#frmDoctors").serialize(),
                success: function (result) {
                    if (result != null && result.statusCode != 200) {
                        toastr.error(result.message);
                        $('#EdiDoctors').modal("show");
                    } else {
                        toastr.success(result.message);
                        GetDoctorsList();
                        $('#EdiDoctors').modal("hide");
                    }
                    console.log(result);
                },
                error: function (ex) {
                    debugger;
                    toastr.error('Invalid Data.');
                    console.log('Failed ');
                }
            });
        }
        else {
            event.preventDefault();
            event.stopImmediatePropagation();
        }
    });
    });
</script>
